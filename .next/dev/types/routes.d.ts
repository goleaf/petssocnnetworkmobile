// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/moderation" | "/blog" | "/blog/[id]" | "/blog/[id]/edit" | "/blog/create" | "/dashboard" | "/dashboard/add-pet" | "/drafts" | "/explore" | "/explore/hashtag/[tag]" | "/feed" | "/notifications" | "/pet/[id]" | "/profile/[username]" | "/profile/[username]/add-pet" | "/promote" | "/search" | "/settings/notifications" | "/settings/privacy" | "/shelters" | "/shelters/[id]" | "/user/[username]" | "/user/[username]/followers" | "/user/[username]/following" | "/wiki" | "/wiki/[slug]"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/admin/moderation": {}
  "/blog": {}
  "/blog/[id]": { "id": string; }
  "/blog/[id]/edit": { "id": string; }
  "/blog/create": {}
  "/dashboard": {}
  "/dashboard/add-pet": {}
  "/drafts": {}
  "/explore": {}
  "/explore/hashtag/[tag]": { "tag": string; }
  "/feed": {}
  "/notifications": {}
  "/pet/[id]": { "id": string; }
  "/profile/[username]": { "username": string; }
  "/profile/[username]/add-pet": { "username": string; }
  "/promote": {}
  "/search": {}
  "/settings/notifications": {}
  "/settings/privacy": {}
  "/shelters": {}
  "/shelters/[id]": { "id": string; }
  "/user/[username]": { "username": string; }
  "/user/[username]/followers": { "username": string; }
  "/user/[username]/following": { "username": string; }
  "/wiki": {}
  "/wiki/[slug]": { "slug": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
